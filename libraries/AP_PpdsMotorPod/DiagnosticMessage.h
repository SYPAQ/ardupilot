// DiagnosticMessage.h was generated by ProtoGen version 2.17.b

#ifndef _DIAGNOSTICMESSAGE_H
#define _DIAGNOSTICMESSAGE_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 */

#include "PpdsMotorPodProtocol.h"

/*!
 * Diagnostic message.
 */
typedef struct
{
    DiagnosticLevel level;  
    char            str[64];
}DiagnosticMessage_t;

//! Encode a DiagnosticMessage_t structure into a byte array
void encodeDiagnosticMessage_t(uint8_t* data, int* bytecount, const DiagnosticMessage_t* user);

//! Decode a DiagnosticMessage_t structure from a byte array
int decodeDiagnosticMessage_t(const uint8_t* data, int* bytecount, DiagnosticMessage_t* user);

//! Create the DiagnosticMessage packet
void encodeDiagnosticMessagePacketStructure(CorvoPacket* pkt, const DiagnosticMessage_t* user);

//! Decode the DiagnosticMessage packet
int decodeDiagnosticMessagePacketStructure(const CorvoPacket* pkt, DiagnosticMessage_t* user);

//! return the packet ID for the DiagnosticMessage packet
#define getDiagnosticMessagePacketID() (DIAGNOSTIC_MSG)

//! return the minimum encoded length for the DiagnosticMessage packet
#define getDiagnosticMessageMinDataLength() (2)

//! return the maximum encoded length for the DiagnosticMessage packet
#define getDiagnosticMessageMaxDataLength() (65)

#ifdef __cplusplus
}
#endif
#endif
