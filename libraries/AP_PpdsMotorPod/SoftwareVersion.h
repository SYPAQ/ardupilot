// SoftwareVersion.h was generated by ProtoGen version 2.17.b

#ifndef _SOFTWAREVERSION_H
#define _SOFTWAREVERSION_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 */

#include "PpdsMotorPodProtocol.h"

/*!
 * Software version information.
 */
typedef struct
{
    char      id[12];    
    uint8_t   major;     
    uint8_t   minor;     
    uint8_t   patch;     
    BuildType build_type;
    uint32_t  build_time;
    uint32_t  git_hash;  
}SoftwareVersion_t;

//! Encode a SoftwareVersion_t structure into a byte array
void encodeSoftwareVersion_t(uint8_t* data, int* bytecount, const SoftwareVersion_t* user);

//! Decode a SoftwareVersion_t structure from a byte array
int decodeSoftwareVersion_t(const uint8_t* data, int* bytecount, SoftwareVersion_t* user);

//! Create the SoftwareVersion packet
void encodeSoftwareVersionPacketStructure(CorvoPacket* pkt, const SoftwareVersion_t* user);

//! Decode the SoftwareVersion packet
int decodeSoftwareVersionPacketStructure(const CorvoPacket* pkt, SoftwareVersion_t* user);

//! return the packet ID for the SoftwareVersion packet
#define getSoftwareVersionPacketID() (SOFTWARE_VERSION)

//! return the minimum encoded length for the SoftwareVersion packet
#define getSoftwareVersionMinDataLength() (13)

//! return the maximum encoded length for the SoftwareVersion packet
#define getSoftwareVersionMaxDataLength() (24)

#ifdef __cplusplus
}
#endif
#endif
