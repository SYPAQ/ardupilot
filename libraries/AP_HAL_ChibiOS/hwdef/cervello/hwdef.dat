# hw definition file for processing by chibios_hwdef.py

# MCU class and specific type
MCU STM32F4xx STM32F427xx

# board ID for firmware load
APJ_BOARD_ID 1688

# crystal frequency
OSCILLATOR_HZ 24000000

# board voltage
STM32_VDD 330U

# Flash size
FLASH_SIZE_KB 2048

# with 2M flash we can afford to optimize for speed
env OPTIMIZE -O3

# Allocate space for fallback to flash if no FRAM is fitted:
#   - The first four (4) flash pages are 16kB each.
#       - see the definition of flash_memmap[] in /AP_HAL_ChibiOS/hwdef/common/flash.c
#   - The bootloader lives in the first flash page.
#   - The second, third and fourth pages are reserved for parameters.
define STORAGE_FLASH_PAGE 1
#   - Gives us a total of 64kB to reserve before the main firmware.
FLASH_RESERVE_START_KB 64

define HAL_STORAGE_SIZE 16384

# This is the STM32 timer that ChibiOS will use for the low level
# driver. This must be a 32 bit timer, see hal_st_lld.c in ChibiOS for details.

# ChibiOS system timer
STM32_ST_USE_TIMER 5

# USB setup
USB_VENDOR 0x0483 # ST Microelectronics
USB_PRODUCT 0x5740 # Virtual COM Port
USB_STRING_MANUFACTURER "SYPAQ"

# I2C Bus Configuration
I2C_ORDER I2C1 I2C2
define HAL_I2C_BUS_BASE 1
# The first bus is internal
define HAL_I2C_INTERNAL_MASK 1

# order of UARTs (and USB)
UART_ORDER OTG1 UART4 USART2 USART3 UART7 UART8 USART1

## PORT A
#########
# UART4 is GPS
PA0 UART4_TX UART4 NODMA
PA1 UART4_RX UART4 NODMA
PA2 BATT_VOLTAGE_SENS ADC1 SCALE(1)
PA3 BATT_CURRENT_SENS ADC1 SCALE(1)
PA4 VDD_5V_SENS ADC1 SCALE(2)

# SPI1 is sensors bus
PA5 SPI1_SCK SPI1
PA6 SPI1_MISO SPI1
PA7 SPI1_MOSI SPI1

PA8 LED_RED OUTPUT HIGH GPIO(0)

PA9 VBUS INPUT

PA10 USART1_RX USART1

PA11 OTG_FS_DM OTG1
PA12 OTG_FS_DP OTG1

PA13 JTMS-SWDIO SWD
PA14 JTCK-SWCLK SWD

# PWM output for buzzer
PA15 TIM2_CH1 TIM2 GPIO(77) ALARM

## PORT B
#########
# spektrum RC input pin, used as GPIO for bind for satellite receivers
PB0 SPEKTRUM_RC INPUT PULLUP GPIO(71)
define HAL_GPIO_SPEKTRUM_RC 71

#PB1 - See PWM(8)
PB2 BOOT1 INPUT
PB3 LED_BLUE OUTPUT HIGH GPIO(2)
#PB4 - See PWM(9)
PB5 VDD_BRICK_VALID INPUT

PB6 CAN2_TX CAN2
PB7 I2C1_SDA I2C1
PB8 I2C1_SCL I2C1
#PB9 - See PWM(7)
PB10 I2C2_SCL I2C2
PB11 I2C2_SDA I2C2
PB12 CAN2_RX CAN2
PB13 SPI2_SCK SPI2
PB14 SPI2_MISO SPI2
PB15 SPI2_MOSI SPI2

## PORT C
#########
PC0 VBUS_VALID INPUT
PC1 RSSI_IN ADC1
PC2 IMU_ICM20948_CS CS
PC3 LED_SAFETY OUTPUT HIGH
PC4 SAFETY_IN INPUT
PC5 PWR_SENSORS_EN OUTPUT HIGH
PC6 SBUS_INV OUTPUT HIGH
PC7 TIM8_CH2 TIM8 RCIN FLOAT LOW # also USART6_RX for serial RC

PC8 SDIO_D0 SDIO
PC9 SDIO_D1 SDIO
PC10 SDIO_D2 SDIO
PC11 SDIO_D3 SDIO
PC12 SDIO_CK SDIO

PC13 PWR_CAN_EN OUTPUT HIGH
PC14 IMU_ICM20602_DRDY INPUT
PC15 IMU_ICM20602_CS CS

## PORT D
#########
PD0 CAN1_RX CAN1
PD1 CAN1_TX CAN1
PD2 SDIO_CMD SDIO

# USART2 serial2 telem1
PD3 USART2_CTS USART2
PD4 USART2_RTS USART2
PD5 USART2_TX USART2
PD6 USART2_RX USART2

PD7 BARO_MS5611_CS CS

# USART3 serial3 telem2
PD8 USART3_TX USART3
PD9 USART3_RX USART3
PD10 FRAM_CS CS
PD11 USART3_CTS USART3
PD12 USART3_RTS USART3
#PD13 - See PWM(5)
#PD14 - See PWM(6)
PD15 IMU_ICM20948_DRDY INPUT

## PORT E
#########
PE0 UART8_RX UART8
PE1 UART8_TX UART8

PE2 SPI4_SCK SPI4
PE3 EXT_SPI4_1_CS CS
PE4 EXT_SPI4_2_CS CS
PE5 SPI4_MISO SPI4
PE6 SPI4_MOSI SPI4
PE7 UART7_RX UART7 NODMA
PE8 UART7_TX UART7 NODMA
#PE9 - See PWM(4)
PE10 EXT_CRYPTO_CS CS
#PE11 - See PWM(3)
PE12 MAG_IST8308_DRDY INPUT
#PE13 - See PWM(2)
#PE14 - See PWM(1)
PE15 LED_GREEN OUTPUT HIGH GPIO(1)

# PWM Configuration
PE14 TIM1_CH4 TIM1 PWM(1) GPIO(50)
PE13 TIM1_CH3 TIM1 PWM(2) GPIO(51)
PE11 TIM1_CH2 TIM1 PWM(3) GPIO(52)
PE9 TIM1_CH1 TIM1 PWM(4) GPIO(53)
PD13 TIM4_CH2 TIM4 PWM(5) GPIO(54)
PD14 TIM4_CH3 TIM4 PWM(6) GPIO(55)
PB9 TIM4_CH4 TIM4 PWM(7) GPIO(56)
PB1 TIM3_CH4 TIM3 PWM(8) GPIO(57)
PB4 TIM3_CH1 TIM3 PWM(9) GPIO(58)

# 9 PWM available by default
define BOARD_PWM_COUNT_DEFAULT 9

# SPI device table. The DEVID values are chosen to match the PX4 port
# of ArduPilot so users don't need to re-do their accel and compass calibrations
# when moving to ChibiOS
SPIDEV ms5611           SPI1 DEVID3  BARO_MS5611_CS  MODE3  10*MHZ  10*MHZ
SPIDEV icm20948         SPI1 DEVID1  IMU_ICM20948_CS MODE3  4*MHZ   8*MHZ
SPIDEV icm20602         SPI1 DEVID2  IMU_ICM20602_CS MODE3  4*MHZ   8*MHZ
SPIDEV ramtron          SPI2 DEVID10 FRAM_CS         MODE3  8*MHZ   8*MHZ
SPIDEV pixartflow       SPI4 DEVID13 EXT_SPI4_1_CS   MODE3  2*MHZ   2*MHZ
SPIDEV ATAES132A_ext    SPI4 DEVID12 EXT_CRYPTO_CS   MODE3  2*MHZ   2*MHZ
SPIDEV external0m0      SPI4 DEVID1  EXT_SPI4_1_CS   MODE0  2*MHZ   2*MHZ
SPIDEV external0m1      SPI4 DEVID1  EXT_SPI4_1_CS   MODE1  2*MHZ   2*MHZ
SPIDEV external0m2      SPI4 DEVID1  EXT_SPI4_1_CS   MODE2  2*MHZ   2*MHZ
SPIDEV external0m3      SPI4 DEVID1  EXT_SPI4_1_CS   MODE3  2*MHZ   2*MHZ
SPIDEV external1m0      SPI4 DEVID2  EXT_SPI4_2_CS   MODE0  2*MHZ   2*MHZ
SPIDEV external1m1      SPI4 DEVID2  EXT_SPI4_2_CS   MODE1  2*MHZ   2*MHZ
SPIDEV external1m2      SPI4 DEVID2  EXT_SPI4_2_CS   MODE2  2*MHZ   2*MHZ
SPIDEV external1m3      SPI4 DEVID2  EXT_SPI4_2_CS   MODE3  2*MHZ   2*MHZ

define HAL_BOARD_LOG_DIRECTORY "/APM/LOGS"
define HAL_BOARD_TERRAIN_DIRECTORY "/APM/TERRAIN"

# allow to have have a dedicated safety switch pin
define HAL_HAVE_SAFETY_SWITCH 1

# Enable RAMTROM parameter storage.
define HAL_WITH_RAMTRON 1

# Enable FAT filesystem support (needs a microSD defined via SDIO).
define HAL_OS_FATFS_IO 1

# Enable RTSCTS support. You should define this if you have any UARTs with RTS/CTS pins.
define AP_FEATURE_RTSCTS 1

# Now setup the default battery pins driver analog pins and default
# scaling for the power brick.
define HAL_BATT_VOLT_PIN 2
define HAL_BATT_CURR_PIN 3
define HAL_BATT_VOLT_SCALE 10.1
define HAL_BATT_CURR_SCALE 17.0

# Board has a TriColor LED, Red, Green, Blue
define HAL_HAVE_PIXRACER_LED

define HAL_GPIO_LED_ON  0
define HAL_GPIO_LED_OFF 1

# LED setup for PixracerLED driver
define HAL_GPIO_A_LED_PIN 0
define HAL_GPIO_B_LED_PIN 1
define HAL_GPIO_C_LED_PIN 2

# Generate driver #defines for board testing. This requires that specific I2C
# buses are used in devices (i.e. can't use ALL_INTERNAL)
DEVICE_TEST_CODE 1

# 2 IMUs
IMU Invensense SPI:icm20602 ROTATION_YAW_90
IMU Invensensev2 SPI:icm20948 ROTATION_YAW_180
define HAL_DEFAULT_INS_FAST_SAMPLE 3

# 2 Compasses, compass as part of ICM20948, I2C compass
COMPASS AK09916:probe_ICM20948 0 ROTATION_YAW_270
COMPASS IST8308 I2C:1:0x0C false ROTATION_YAW_180

# 1 Barometer
BARO MS56XX SPI:ms5611
